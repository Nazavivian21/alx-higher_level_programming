>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test for integer matrix division
=======================================
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

Test for float matrix division
========================================
>>> matrix_divided([[1.0, 2.0], [3.0, 4.0]], 2)
[[0.5, 1.0], [1.5, 2.0]]

Test for list type
==========================================
>>> matrix_divided([[1, 2], [3, '4']], 2)
Traceback (most recent call last):
...    
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test for row size
===========================================
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
...    
TypeError: Each row of the matrix must have the same size

Test for div type
============================================
>>> matrix_divided([[1, 2], [3, 4]], 'a')
Traceback (most recent call last):
...
TypeError: div must be a number

Test for ZeroDivisionError
============================================
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
...      
ZeroDivisionError: division by zero

Test for zero arguments
=======================================
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test for one arguments
======================================
>>> matrix_divided(2)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Test for a case where the divisor is float('inf')
==================================================
>>> matrix_divided([[1, 2], [3, 4]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]